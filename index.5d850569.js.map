{"mappings":"YAAO,ICEIA,EAAS,SAAAC,G,OAASC,OAAOC,gBAAgB,IAAIC,WAAWH,G,EACxDI,EAAe,SAACC,EAAUC,EAAaC,GAChD,IAAIC,GAAQ,GAAKC,KAAKC,KAAKL,EAASM,OAAS,IAAM,EAC/CC,KAAU,IAAOJ,EAAOF,EAAeD,EAASM,QACpD,OAAO,WAEL,I,IAFME,EAAIC,UAAAH,OAAA,YAAAG,UAAA,GAAAA,UAAA,GAAGR,EACTS,EAAK,KAIP,IAFA,IAAIf,EAAQO,EAAUK,GAClBI,EAAW,EAAPJ,EACDI,KAEL,IADAD,GAAMV,EAASL,EAAMgB,GAAKR,IAAS,IAC5BG,QAAUE,EAAM,OAAOE,C,GCLhCE,GDUsB,SAACZ,G,IAAUQ,EAAIC,UAAAH,OAAA,YAAAG,UAAA,GAAAA,UAAA,GAAG,GAC5CV,EAAaC,EAAiB,EAAPQ,EAAUd,E,CCbb,CADL,SAC8B,IAEpCmB,gBACXC,QAAQC,IAAIH,E","sources":["node_modules/nanoid/url-alphabet/index.js","node_modules/nanoid/index.browser.js","src/index.js"],"sourcesContent":["export const urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n","import { urlAlphabet as scopedUrlAlphabet } from './url-alphabet/index.js'\nexport { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += scopedUrlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n","// import { nanoid } from 'nanoid';\n// const id = nanoid(5);\n// console.log(id);\n\nimport { customAlphabet } from \"nanoid\";\nconst alphabet = 'abc123';\nconst custopmNanoid = customAlphabet(alphabet, 10);\n\nconst id = customNAnoid();\nconsole.log(id);"],"names":["$8069ef7e6126e429$export$4385e60b38654f68","bytes","crypto","getRandomValues","Uint8Array","$8069ef7e6126e429$export$a5cee9e955a615e5","alphabet","defaultSize","getRandom","mask","Math","log2","length","step","size","arguments","id","j","$b8f9b7833fa37166$var$id","customNAnoid","console","log"],"version":3,"file":"index.5d850569.js.map"}